version: 2 # use CircleCI 2.0

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/php:7.3-node-browsers # ...with this image as the primary container; this is where all `steps` will run
      - image: circleci/ruby:2.4.2-jessie-node
    working_directory: ~/laravel # directory where steps will run
    steps: # a set of executable commands
      - checkout # special step to check out source code to working directory
      - run: sudo apt install -y libsqlite3-dev zlib1g-dev
      - run: sudo docker-php-ext-install zip
      - run: sudo composer self-update
      - run: sudo apt-get install -y libpng-dev
      - run: sudo apt-get install software-properties-common
      - run: sudo add-apt-repository -y ppa:ondrej/php
      - run: sudo apt-get install rubygems
      - run: sudo gem install capistrano
      #- run: sudo apt-get update
#      - run: sudo apt-get install php-gearman
#      - run:
#            name: Install PHP Extensions
#            command: sudo docker-php-ext-install gd
#      - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
#          keys:
#            - composer-v1-{{ checksum "composer.lock" }}
#            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
#            - composer-v1-
#      - run: composer install -n --prefer-dist
#      - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
#          key: composer-v1-{{ checksum "composer.lock" }}
#          paths:
#            - vendor
#      - restore_cache: # special step to restore the dependency cache if `package.json` does not change
#          keys:
#            - node-v1-{{ checksum "package.json" }}
#            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
#            - node-v1-
#      - run: yarn install
#      - save_cache: # special step to save the dependency cache with the `package.json` cache key template
#          key: node-v1-{{ checksum "package.json" }}
#          paths:
#            - node_modules

      #- run: touch storage/testing.sqlite
      #- run: php artisan migrate --env=testing --database=sqlite_testing --force
      #- run: ./vendor/bin/codecept build
      #- run: ./vendor/bin/codecept run
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
#      - add_ssh_keys:
#            fingerprints:
#                # for ssh to masutaka.net
#                # See https://circleci.com/gh/masutaka/masutaka.net/edit#ssh
#                - "77:38:a5:e0:78:ac:78:a9:46:98:b3:76:cd:b8:6e:73"
      - deploy:
            name: Deploy
            command: |
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                cd deploy && cap master deploy
              fi
              if [ "${CIRCLE_BRANCH}" == "dev" ]; then
                cd deploy && cap dev deploy
              fi


